JavaScript. Задачи на циклы

Задача 1
Найдите сумму  всех целых чисел от 1 до n включительно и верните из функции результат.

Решение:
function testCycle(n) {
    var x = 0;

    for (let i = 1; i <= n; i++) {
      x += i;
    }

    return x;
}

Задача 2
Даны два целых числа k и n. Верните из функции строку, которая состоит из чисел n, повторяющихся k раз, 
разделенных пробелом. Известно, что и k и n больше либо равно 1.

Решение:
function testCycle(k, n) {
    var x = "";
    var k;
    var n;

    for (var i = 0; i < k; i++) {
      x += n + " ";
    }

    return x;
}

Задача 3
Даны числа a и b. Выведите строку с числами от а до b, разделенных пробелами. Известно, что b больше a.

Решение:
function testCycle(a, b) {
    var x = "";
    var a;
    var b;

    for (var i = a; i <= b; i++) {
        x += i + " ";
    }

    return x;
}

Задача 4
Даны числа a и b. Выведите строку с числами между а и b включая границы, отсортированными по возрастанию. 
Неизвестно, какое из чисел больше, но известно, что и a и b больше 0.

Решение:
function testCycle(a, b) {
    var x = "";
    var a;
    var b;

    if (a <= b) {

    for (var i = a; i <= b; i++) { 
      x += i + " ";
    }

    } else {

    for (var i = b; i <= a; i++) {    
      x += i + " ";
    }
    }

    return x;
}

Задача 5
Даны числа a и b. Выведите строку с числами от большего числа до меньшего.
Известно, что и a и b больше либо равно 1, но неизвестно, какое из них больше.


Решение:
function testCycle(a, b) {
    var x = "";
    var a;
    var b;

    if (a >= b) {

    for (var i = a; i >= b; i--) {
      x += i + " ";
    }

    } else {

    for (var i = b; i >= a; i--) {  
      x += i + " ";
    }
    }

    return x;
}

Задача 6
Даны числа a и b. Найдите сумму квадратов чисел между a и b включительно. 
Неизвестно, какое из чисел a или b больше.

Решение:
function testCycle(a, b) {
    var x = 0;
    var a;
    var b;

    if (a <= b) {

    for (var i = a; i <= b; i++) {
      x += (i ** 2);
    }

    } else {

      for (var i = b; i <= a; i++) {  
        x += (i ** 2);
    }
    }

    return x;
}

Задача 7
Дано целое число n, большее 1. Найти квадрат данного числа, используя формулу n^2 = 1 + 3 + 5 + ... + (2 * n - 1).
Из функции необходимо вывести строку, состоящую из чисел, получающихся на каждом шаге при добавлении каждого слагаемого 
(таким образом, получится строка из квадратов всех чисел от 1 до n).

Решение:
function testCycle(n) {
    var x = " ";
    var n;
    var y = 0;

    for (var i = 1; i <= (n + n - 1); i++) {

    if (i % 2 == 0) continue;
      y += i;
      x += y + " ";
    }

    return x;
}

Задача 8
Дано число n (n > 0). Верните из функции следующую сумму: 1 + 1.5 + 2 + 2.5 + ... + n1+1.5+2+2.5+...+n.

Решение:
function testCycle(n) {
    var x = 0;

    for (let i = 1; i <= n; i = i + 0.5){
      x += i;
    }

    return x;
}

Задача 9
Дано число n (n > 0). Верните из функции значение двойного факториала: 
n!! = n * (n - 2) * (n - 4) * ... * 2n!!=n∗(n−2)∗(n−4)∗...∗2 (или 1, в зависимости от четности n).

Пример, для n = 5: n!! = 5 * 3 * 1 = 15n!!=5∗3∗1=15, для n = 6: n!! = 6*4*2=48n!!=6∗4∗2=48

Решение:
function testCycle(n) {
    var x = 1;
    var n;

    for (var i = n; i > 0; i = i - 2) {
      x = x * i;
    }

    return x;
}	

Задача 10
Найдите наибольший общий делитель чисел a и b. (Подсказка: вам поможет алгоритм Евклида и цикл while).

Решение:
function testCycle(a, b) {
    var x;

    while ( a != 0 && b != 0 ) {

    if (a >= b) {
      x = b; a = a - b;

    } else {
      x = a; b = b - a; 
    }
    }

    return x;
}

Задача 11
Дано число n (n > 1). Проверьте, простое оно или составное. Если число простое - верните из функции строку 
"Простое число", если нет - "Составное число". Воспользуйтесь методом перебора делителей числа.

Решение:
function testCycle(n) {
  var x = "Простое число";

  for (var i = 2; i <= (n ** (1 / 2)); i++) {

  if (n % i == 0) {
    x = "Составное число";
  }
  }

   return x;
}

Задача 12
Дано число n (n > 1). Выведите строку, состоящую из простых чисел, меньших n. 
Воспользуйтесь решетом Эратосфена. Единицу не считаем простым числом.

Решение решетом Эратосфена:
function testCycle(n) {
    var arr = [n + 1];
    var x = [];

    for (var i = 2; i < n; i++) {
        
    if (!arr[i]) {
      x.push(i);
        
    for (var j = i * 2; j < n; j += i) {
      arr[j] = true;
    } 
    }
    }
    x = x.join(" ")
    
    return x;
}

Решение методом перебора делителей:
function testCycle(n) {
    var x = "";

    nextPrime: for (let i = 2; i < n; i++) {  

    for (let j = 2; j < i; j++) { 

    if (i % j == 0) continue nextPrime; 
    } 
      x=x + i + " ";
    }
    return x;
}

Задача 13
Дано число n. Найдите сумму его цифр.

Решение:
function testCycle(n) {
    var x = 0;
    var n;
    
    while (n > 0) {
      x += (n % 10);
      n = (n - (n % 10)) / 10;
    }
    return x;
}

Задача 14
Дано положительное число n. Переведите его в двоичную систему счисления.

Решение:
function testCycle(n) {
    var x = " ";
    var n;
    
    while (n > 0) {
      x = (n % 2) + x;
      n = (n - (n % 2)) / 2;
    }
    return x;
}

Задача 15
Дано число n (n > 1). Верните из функции n-ное число Фибоначчи

Решение:
function testCycle(n) {
    var x;
    var a = 1;
    var b = 0;
    
    for (var i = 1; i <= n; i++) {
      x = a + b;
      a = b;
      b = x;
    }
    return x;
}